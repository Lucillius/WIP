#steps we need for complete all in one
#automatically trace jpg file - complete
#convert jpg to swc via neuronstudio - can't read tif files
#use swc in neutube and imagej
#calculate length of px in imagej
#calculate format in swc
#find what swc columns mean when spat out from neurostudio
#Importing modules
from os import listdir
from os.path import isfile, join
import cv2
import os
from PIL import Image
from load_images_from_folder import load_images_from_folder
from fileselector import select_file

#from load_images_from_folder import load_images_from_folder
#We need a way to find batch processing of multiple jpgs
#able to open and read a folder of jpgs
#need to be able to save folder of jpgs as tifs - see load_images_from_folder
#Declaring the original image to be used
#load_images_from_folder(r"C:\Users\Tommy\Desktop\School Files\477GFP;S6kSTDETE x G477GFP jpegs")
originalImage = cv2.imread("C:\\Users\\Tommy\\Desktop\\test.jpg")
#Grayscaling the image
grayImage = cv2.cvtColor(originalImage, cv2.COLOR_BGR2GRAY)
#Turning the grayscale image into black and white
(thresh, im_bw) = cv2.threshold(grayImage, 0, 255, cv2.THRESH_BINARY | cv2.THRESH_OTSU)
#Combining images
im_bw_color = cv2.cvtColor(im_bw, cv2.COLOR_GRAY2BGR)
combinedImage = cv2.add(im_bw_color, originalImage)
#identifying filetype to save as as a variable
fileName = "test.tif"
#save variable as image named test as a tiff file and use combinedImage as a variable
cv2.imwrite(fileName, combinedImage)
#define path to create new folder
newPath = r"C:\Users\Tommy\Desktop\New"
#
if not os.path.exists(newPath):
    os.makedirs(newPath)
#Displaying all images
cv2.imshow("combinedimage", combinedImage)
#Prevents image windows from closing immediately
cv2.waitKey(0)